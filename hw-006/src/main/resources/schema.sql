DROP TABLE IF EXISTS BOOKS;
DROP TABLE IF EXISTS GENRES;
DROP TABLE IF EXISTS AUTHORS;
DROP TABLE IF EXISTS COMMENTS;

CREATE TABLE books
(
    book_id INT AUTO_INCREMENT NOT NULL,
    author  INT                NOT NULL,
    genre   INT                NOT NULL,
    title   VARCHAR(255)       NOT NULL,
    CONSTRAINT pk_books PRIMARY KEY (book_id)
);

ALTER TABLE books
    ADD CONSTRAINT FK_BOOKS_ON_AUTHOR FOREIGN KEY (author) REFERENCES authors (author_id);

ALTER TABLE books
    ADD CONSTRAINT FK_BOOKS_ON_GENRE FOREIGN KEY (genre) REFERENCES genres (genre_id);

CREATE TABLE authors
(
    author_id INT AUTO_INCREMENT NOT NULL,
    name      VARCHAR(30)        NOT NULL,
    surname   VARCHAR(30)        NOT NULL,
    initials  VARCHAR(4),
    CONSTRAINT pk_authors PRIMARY KEY (author_id)
);
CREATE TABLE genres
(
    genre_id INT AUTO_INCREMENT NOT NULL,
    genre    VARCHAR(30)        NOT NULL,
    CONSTRAINT pk_genres PRIMARY KEY (genre_id)
);

ALTER TABLE genres
    ADD CONSTRAINT uc_genres_genre UNIQUE (genre);

CREATE TABLE comments
(
    comment_id  INT AUTO_INCREMENT NOT NULL,
    text        VARCHAR(10000)     NOT NULL,
    author_nick VARCHAR(30),
    date        TIMESTAMP,
    comments    INT,
    CONSTRAINT pk_comments PRIMARY KEY (comment_id)
);

ALTER TABLE comments
    ADD CONSTRAINT FK_COMMENTS_ON_COMMENTS FOREIGN KEY (comments) REFERENCES books (book_id) ON DELETE CASCADE ;




-- CREATE TABLE BOOKS
-- (
--     BOOK_ID        INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
--     AUTHOR_ID INT         NOT NULL,
--     GENRE_ID  INT         NOT NULL,
--     TITLE     VARCHAR(50) NOT NULL
-- );
-- CREATE TABLE GENRES
-- (
--     GENRE_ID    INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
--     GENRE VARCHAR(30) NOT NULL
-- );
-- CREATE TABLE AUTHORS
-- (
--     AUTHOR_ID       INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
--     NAME     VARCHAR(30) NOT NULL,
--     SURNAME  VARCHAR(30) NOT NULL,
--     INITIALS VARCHAR(6)  NOT NULL
-- );
-- CREATE TABLE COMMENTS
-- (
--     COMMENT_ID       INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
--     COMMENT_TEXT     CLOB(10K) NOT NULL,
--     AUTHOR_NICK      VARCHAR(30) NOT NULL,
--     COMMENT_DATE     DATE
-- );
